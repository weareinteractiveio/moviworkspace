{"version":3,"sources":["jquery.matchHeight.js"],"names":["factory","define","amd","module","exports","require","jQuery","$","_previousResizeWidth","_updateTimeout","_parse","value","parseFloat","_rows","elements","tolerance","$elements","lastTop","rows","each","$that","top","offset","css","lastRow","length","push","Math","floor","abs","add","_parseOptions","options","opts","byRow","property","target","remove","extend","matchHeight","fn","that","_groups","key","group","not","_apply","version","_throttle","_maintainScroll","_beforeUpdate","_afterUpdate","scrollTop","window","htmlHeight","outerHeight","$hiddenParents","parents","filter","data","attr","display","row","$row","targetHeight","style","verticalPadding","is","_applyDataApi","groups","$this","groupId","_update","event","throttle","type","windowWidth","width","setTimeout","bind"],"mappings":";;;;AAAA;;;;;;AAMA,CAAC,CAAC,UAASA,OAAT,EAAkB;AAAE;AAClB;;AACA,QAAI,OAAOC,MAAP,KAAkB,UAAlB,IAAgCA,OAAOC,GAA3C,EAAgD;AAC5C;AACAD,eAAO,CAAC,QAAD,CAAP,EAAmBD,OAAnB;AACH,KAHD,MAGO,IAAI,OAAOG,MAAP,KAAkB,WAAlB,IAAiCA,OAAOC,OAA5C,EAAqD;AACxD;AACAD,eAAOC,OAAP,GAAiBJ,QAAQK,QAAQ,QAAR,CAAR,CAAjB;AACH,KAHM,MAGA;AACH;AACAL,gBAAQM,MAAR;AACH;AACJ,CAZA,EAYE,UAASC,CAAT,EAAY;AACX;;;;AAIA,QAAIC,uBAAuB,CAAC,CAA5B;AAAA,QACIC,iBAAiB,CAAC,CADtB;;AAGA;;;;;AAKA,QAAIC,SAAS,SAATA,MAAS,CAASC,KAAT,EAAgB;AACzB;AACA,eAAOC,WAAWD,KAAX,KAAqB,CAA5B;AACH,KAHD;;AAKA;;;;;;AAMA,QAAIE,QAAQ,SAARA,KAAQ,CAASC,QAAT,EAAmB;AAC3B,YAAIC,YAAY,CAAhB;AAAA,YACIC,YAAYT,EAAEO,QAAF,CADhB;AAAA,YAEIG,UAAU,IAFd;AAAA,YAGIC,OAAO,EAHX;;AAKA;AACAF,kBAAUG,IAAV,CAAe,YAAU;AACrB,gBAAIC,QAAQb,EAAE,IAAF,CAAZ;AAAA,gBACIc,MAAMD,MAAME,MAAN,GAAeD,GAAf,GAAqBX,OAAOU,MAAMG,GAAN,CAAU,YAAV,CAAP,CAD/B;AAAA,gBAEIC,UAAUN,KAAKO,MAAL,GAAc,CAAd,GAAkBP,KAAKA,KAAKO,MAAL,GAAc,CAAnB,CAAlB,GAA0C,IAFxD;;AAIA,gBAAID,YAAY,IAAhB,EAAsB;AAClB;AACAN,qBAAKQ,IAAL,CAAUN,KAAV;AACH,aAHD,MAGO;AACH;AACA,oBAAIO,KAAKC,KAAL,CAAWD,KAAKE,GAAL,CAASZ,UAAUI,GAAnB,CAAX,KAAuCN,SAA3C,EAAsD;AAClDG,yBAAKA,KAAKO,MAAL,GAAc,CAAnB,IAAwBD,QAAQM,GAAR,CAAYV,KAAZ,CAAxB;AACH,iBAFD,MAEO;AACH;AACAF,yBAAKQ,IAAL,CAAUN,KAAV;AACH;AACJ;;AAED;AACAH,sBAAUI,GAAV;AACH,SApBD;;AAsBA,eAAOH,IAAP;AACH,KA9BD;;AAgCA;;;;;AAKA,QAAIa,gBAAgB,SAAhBA,aAAgB,CAASC,OAAT,EAAkB;AAClC,YAAIC,OAAO;AACPC,mBAAO,IADA;AAEPC,sBAAU,QAFH;AAGPC,oBAAQ,IAHD;AAIPC,oBAAQ;AAJD,SAAX;;AAOA,YAAI,QAAOL,OAAP,yCAAOA,OAAP,OAAmB,QAAvB,EAAiC;AAC7B,mBAAOzB,EAAE+B,MAAF,CAASL,IAAT,EAAeD,OAAf,CAAP;AACH;;AAED,YAAI,OAAOA,OAAP,KAAmB,SAAvB,EAAkC;AAC9BC,iBAAKC,KAAL,GAAaF,OAAb;AACH,SAFD,MAEO,IAAIA,YAAY,QAAhB,EAA0B;AAC7BC,iBAAKI,MAAL,GAAc,IAAd;AACH;;AAED,eAAOJ,IAAP;AACH,KAnBD;;AAqBA;;;;;AAKA,QAAIM,cAAchC,EAAEiC,EAAF,CAAKD,WAAL,GAAmB,UAASP,OAAT,EAAkB;AACnD,YAAIC,OAAOF,cAAcC,OAAd,CAAX;;AAEA;AACA,YAAIC,KAAKI,MAAT,EAAiB;AACb,gBAAII,OAAO,IAAX;;AAEA;AACA,iBAAKlB,GAAL,CAASU,KAAKE,QAAd,EAAwB,EAAxB;;AAEA;AACA5B,cAAEY,IAAF,CAAOoB,YAAYG,OAAnB,EAA4B,UAASC,GAAT,EAAcC,KAAd,EAAqB;AAC7CA,sBAAM9B,QAAN,GAAiB8B,MAAM9B,QAAN,CAAe+B,GAAf,CAAmBJ,IAAnB,CAAjB;AACH,aAFD;;AAIA;;AAEA,mBAAO,IAAP;AACH;;AAED,YAAI,KAAKhB,MAAL,IAAe,CAAf,IAAoB,CAACQ,KAAKG,MAA9B,EAAsC;AAClC,mBAAO,IAAP;AACH;;AAED;AACAG,oBAAYG,OAAZ,CAAoBhB,IAApB,CAAyB;AACrBZ,sBAAU,IADW;AAErBkB,qBAASC;AAFY,SAAzB;;AAKA;AACAM,oBAAYO,MAAZ,CAAmB,IAAnB,EAAyBb,IAAzB;;AAEA,eAAO,IAAP;AACH,KAlCD;;AAoCA;;;;AAIAM,gBAAYQ,OAAZ,GAAsB,OAAtB;AACAR,gBAAYG,OAAZ,GAAsB,EAAtB;AACAH,gBAAYS,SAAZ,GAAwB,EAAxB;AACAT,gBAAYU,eAAZ,GAA8B,KAA9B;AACAV,gBAAYW,aAAZ,GAA4B,IAA5B;AACAX,gBAAYY,YAAZ,GAA2B,IAA3B;AACAZ,gBAAY1B,KAAZ,GAAoBA,KAApB;AACA0B,gBAAY7B,MAAZ,GAAqBA,MAArB;AACA6B,gBAAYR,aAAZ,GAA4BA,aAA5B;;AAEA;;;;;AAKAQ,gBAAYO,MAAZ,GAAqB,UAAShC,QAAT,EAAmBkB,OAAnB,EAA4B;AAC7C,YAAIC,OAAOF,cAAcC,OAAd,CAAX;AAAA,YACIhB,YAAYT,EAAEO,QAAF,CADhB;AAAA,YAEII,OAAO,CAACF,SAAD,CAFX;;AAIA;AACA,YAAIoC,YAAY7C,EAAE8C,MAAF,EAAUD,SAAV,EAAhB;AAAA,YACIE,aAAa/C,EAAE,MAAF,EAAUgD,WAAV,CAAsB,IAAtB,CADjB;;AAGA;AACA,YAAIC,iBAAiBxC,UAAUyC,OAAV,GAAoBC,MAApB,CAA2B,SAA3B,CAArB;;AAEA;AACAF,uBAAerC,IAAf,CAAoB,YAAW;AAC3B,gBAAIC,QAAQb,EAAE,IAAF,CAAZ;AACAa,kBAAMuC,IAAN,CAAW,aAAX,EAA0BvC,MAAMwC,IAAN,CAAW,OAAX,CAA1B;AACH,SAHD;;AAKA;AACAJ,uBAAejC,GAAf,CAAmB,SAAnB,EAA8B,OAA9B;;AAEA;AACA,YAAIU,KAAKC,KAAL,IAAc,CAACD,KAAKG,MAAxB,EAAgC;;AAE5B;AACApB,sBAAUG,IAAV,CAAe,YAAW;AACtB,oBAAIC,QAAQb,EAAE,IAAF,CAAZ;AAAA,oBACIsD,UAAUzC,MAAMG,GAAN,CAAU,SAAV,CADd;;AAGA;AACA,oBAAIsC,YAAY,cAAZ,IAA8BA,YAAY,MAA1C,IAAoDA,YAAY,aAApE,EAAmF;AAC/EA,8BAAU,OAAV;AACH;;AAED;AACAzC,sBAAMuC,IAAN,CAAW,aAAX,EAA0BvC,MAAMwC,IAAN,CAAW,OAAX,CAA1B;;AAEAxC,sBAAMG,GAAN,CAAU;AACN,+BAAWsC,OADL;AAEN,mCAAe,GAFT;AAGN,sCAAkB,GAHZ;AAIN,kCAAc,GAJR;AAKN,qCAAiB,GALX;AAMN,wCAAoB,GANd;AAON,2CAAuB,GAPjB;AAQN,8BAAU,OARJ;AASN,gCAAY;AATN,iBAAV;AAWH,aAvBD;;AAyBA;AACA3C,mBAAOL,MAAMG,SAAN,CAAP;;AAEA;AACAA,sBAAUG,IAAV,CAAe,YAAW;AACtB,oBAAIC,QAAQb,EAAE,IAAF,CAAZ;AACAa,sBAAMwC,IAAN,CAAW,OAAX,EAAoBxC,MAAMuC,IAAN,CAAW,aAAX,KAA6B,EAAjD;AACH,aAHD;AAIH;;AAEDpD,UAAEY,IAAF,CAAOD,IAAP,EAAa,UAASyB,GAAT,EAAcmB,GAAd,EAAmB;AAC5B,gBAAIC,OAAOxD,EAAEuD,GAAF,CAAX;AAAA,gBACIE,eAAe,CADnB;;AAGA,gBAAI,CAAC/B,KAAKG,MAAV,EAAkB;AACd;AACA,oBAAIH,KAAKC,KAAL,IAAc6B,KAAKtC,MAAL,IAAe,CAAjC,EAAoC;AAChCsC,yBAAKxC,GAAL,CAASU,KAAKE,QAAd,EAAwB,EAAxB;AACA;AACH;;AAED;AACA4B,qBAAK5C,IAAL,CAAU,YAAU;AAChB,wBAAIC,QAAQb,EAAE,IAAF,CAAZ;AAAA,wBACI0D,QAAQ7C,MAAMwC,IAAN,CAAW,OAAX,CADZ;AAAA,wBAEIC,UAAUzC,MAAMG,GAAN,CAAU,SAAV,CAFd;;AAIA;AACA,wBAAIsC,YAAY,cAAZ,IAA8BA,YAAY,MAA1C,IAAoDA,YAAY,aAApE,EAAmF;AAC/EA,kCAAU,OAAV;AACH;;AAED;AACA,wBAAItC,MAAM,EAAE,WAAWsC,OAAb,EAAV;AACAtC,wBAAIU,KAAKE,QAAT,IAAqB,EAArB;AACAf,0BAAMG,GAAN,CAAUA,GAAV;;AAEA;AACA,wBAAIH,MAAMmC,WAAN,CAAkB,KAAlB,IAA2BS,YAA/B,EAA6C;AACzCA,uCAAe5C,MAAMmC,WAAN,CAAkB,KAAlB,CAAf;AACH;;AAED;AACA,wBAAIU,KAAJ,EAAW;AACP7C,8BAAMwC,IAAN,CAAW,OAAX,EAAoBK,KAApB;AACH,qBAFD,MAEO;AACH7C,8BAAMG,GAAN,CAAU,SAAV,EAAqB,EAArB;AACH;AACJ,iBA1BD;AA2BH,aAnCD,MAmCO;AACH;AACAyC,+BAAe/B,KAAKG,MAAL,CAAYmB,WAAZ,CAAwB,KAAxB,CAAf;AACH;;AAED;AACAQ,iBAAK5C,IAAL,CAAU,YAAU;AAChB,oBAAIC,QAAQb,EAAE,IAAF,CAAZ;AAAA,oBACI2D,kBAAkB,CADtB;;AAGA;AACA,oBAAIjC,KAAKG,MAAL,IAAehB,MAAM+C,EAAN,CAASlC,KAAKG,MAAd,CAAnB,EAA0C;AACtC;AACH;;AAED;AACA,oBAAIhB,MAAMG,GAAN,CAAU,YAAV,MAA4B,YAAhC,EAA8C;AAC1C2C,uCAAmBxD,OAAOU,MAAMG,GAAN,CAAU,kBAAV,CAAP,IAAwCb,OAAOU,MAAMG,GAAN,CAAU,qBAAV,CAAP,CAA3D;AACA2C,uCAAmBxD,OAAOU,MAAMG,GAAN,CAAU,aAAV,CAAP,IAAmCb,OAAOU,MAAMG,GAAN,CAAU,gBAAV,CAAP,CAAtD;AACH;;AAED;AACAH,sBAAMG,GAAN,CAAUU,KAAKE,QAAf,EAA0B6B,eAAeE,eAAhB,GAAmC,IAA5D;AACH,aAjBD;AAkBH,SA/DD;;AAiEA;AACAV,uBAAerC,IAAf,CAAoB,YAAW;AAC3B,gBAAIC,QAAQb,EAAE,IAAF,CAAZ;AACAa,kBAAMwC,IAAN,CAAW,OAAX,EAAoBxC,MAAMuC,IAAN,CAAW,aAAX,KAA6B,IAAjD;AACH,SAHD;;AAKA;AACA,YAAIpB,YAAYU,eAAhB,EAAiC;AAC7B1C,cAAE8C,MAAF,EAAUD,SAAV,CAAqBA,YAAYE,UAAb,GAA2B/C,EAAE,MAAF,EAAUgD,WAAV,CAAsB,IAAtB,CAA/C;AACH;;AAED,eAAO,IAAP;AACH,KAzID;;AA2IA;;;;;AAKAhB,gBAAY6B,aAAZ,GAA4B,YAAW;AACnC,YAAIC,SAAS,EAAb;;AAEA;AACA9D,UAAE,gCAAF,EAAoCY,IAApC,CAAyC,YAAW;AAChD,gBAAImD,QAAQ/D,EAAE,IAAF,CAAZ;AAAA,gBACIgE,UAAUD,MAAMV,IAAN,CAAW,SAAX,KAAyBU,MAAMV,IAAN,CAAW,mBAAX,CADvC;;AAGA,gBAAIW,WAAWF,MAAf,EAAuB;AACnBA,uBAAOE,OAAP,IAAkBF,OAAOE,OAAP,EAAgBzC,GAAhB,CAAoBwC,KAApB,CAAlB;AACH,aAFD,MAEO;AACHD,uBAAOE,OAAP,IAAkBD,KAAlB;AACH;AACJ,SATD;;AAWA;AACA/D,UAAEY,IAAF,CAAOkD,MAAP,EAAe,YAAW;AACtB,iBAAK9B,WAAL,CAAiB,IAAjB;AACH,SAFD;AAGH,KAnBD;;AAqBA;;;;;AAKA,QAAIiC,UAAU,SAAVA,OAAU,CAASC,KAAT,EAAgB;AAC1B,YAAIlC,YAAYW,aAAhB,EAA+B;AAC3BX,wBAAYW,aAAZ,CAA0BuB,KAA1B,EAAiClC,YAAYG,OAA7C;AACH;;AAEDnC,UAAEY,IAAF,CAAOoB,YAAYG,OAAnB,EAA4B,YAAW;AACnCH,wBAAYO,MAAZ,CAAmB,KAAKhC,QAAxB,EAAkC,KAAKkB,OAAvC;AACH,SAFD;;AAIA,YAAIO,YAAYY,YAAhB,EAA8B;AAC1BZ,wBAAYY,YAAZ,CAAyBsB,KAAzB,EAAgClC,YAAYG,OAA5C;AACH;AACJ,KAZD;;AAcAH,gBAAYiC,OAAZ,GAAsB,UAASE,QAAT,EAAmBD,KAAnB,EAA0B;AAC5C;AACA;AACA;AACA,YAAIA,SAASA,MAAME,IAAN,KAAe,QAA5B,EAAsC;AAClC,gBAAIC,cAAcrE,EAAE8C,MAAF,EAAUwB,KAAV,EAAlB;AACA,gBAAID,gBAAgBpE,oBAApB,EAA0C;AACtC;AACH;AACDA,mCAAuBoE,WAAvB;AACH;;AAED;AACA,YAAI,CAACF,QAAL,EAAe;AACXF,oBAAQC,KAAR;AACH,SAFD,MAEO,IAAIhE,mBAAmB,CAAC,CAAxB,EAA2B;AAC9BA,6BAAiBqE,WAAW,YAAW;AACnCN,wBAAQC,KAAR;AACAhE,iCAAiB,CAAC,CAAlB;AACH,aAHgB,EAGd8B,YAAYS,SAHE,CAAjB;AAIH;AACJ,KArBD;;AAuBA;;;;AAIA;AACAzC,MAAEgC,YAAY6B,aAAd;;AAEA;AACA7D,MAAE8C,MAAF,EAAU0B,IAAV,CAAe,MAAf,EAAuB,UAASN,KAAT,EAAgB;AACnClC,oBAAYiC,OAAZ,CAAoB,KAApB,EAA2BC,KAA3B;AACH,KAFD;;AAIA;AACAlE,MAAE8C,MAAF,EAAU0B,IAAV,CAAe,0BAAf,EAA2C,UAASN,KAAT,EAAgB;AACvDlC,oBAAYiC,OAAZ,CAAoB,IAApB,EAA0BC,KAA1B;AACH,KAFD;AAIH,CA1XA","file":"jquery.matchHeight.js","sourcesContent":["/**\n* jquery-match-height 0.7.0 by @liabru\n* http://brm.io/jquery-match-height/\n* License: MIT\n*/\n\n;(function(factory) { // eslint-disable-line no-extra-semi\n    'use strict';\n    if (typeof define === 'function' && define.amd) {\n        // AMD\n        define(['jquery'], factory);\n    } else if (typeof module !== 'undefined' && module.exports) {\n        // CommonJS\n        module.exports = factory(require('jquery'));\n    } else {\n        // Global\n        factory(jQuery);\n    }\n})(function($) {\n    /*\n    *  internal\n    */\n\n    var _previousResizeWidth = -1,\n        _updateTimeout = -1;\n\n    /*\n    *  _parse\n    *  value parse utility function\n    */\n\n    var _parse = function(value) {\n        // parse value and convert NaN to 0\n        return parseFloat(value) || 0;\n    };\n\n    /*\n    *  _rows\n    *  utility function returns array of jQuery selections representing each row\n    *  (as displayed after float wrapping applied by browser)\n    */\n\n    var _rows = function(elements) {\n        var tolerance = 1,\n            $elements = $(elements),\n            lastTop = null,\n            rows = [];\n\n        // group elements by their top position\n        $elements.each(function(){\n            var $that = $(this),\n                top = $that.offset().top - _parse($that.css('margin-top')),\n                lastRow = rows.length > 0 ? rows[rows.length - 1] : null;\n\n            if (lastRow === null) {\n                // first item on the row, so just push it\n                rows.push($that);\n            } else {\n                // if the row top is the same, add to the row group\n                if (Math.floor(Math.abs(lastTop - top)) <= tolerance) {\n                    rows[rows.length - 1] = lastRow.add($that);\n                } else {\n                    // otherwise start a new row group\n                    rows.push($that);\n                }\n            }\n\n            // keep track of the last row top\n            lastTop = top;\n        });\n\n        return rows;\n    };\n\n    /*\n    *  _parseOptions\n    *  handle plugin options\n    */\n\n    var _parseOptions = function(options) {\n        var opts = {\n            byRow: true,\n            property: 'height',\n            target: null,\n            remove: false\n        };\n\n        if (typeof options === 'object') {\n            return $.extend(opts, options);\n        }\n\n        if (typeof options === 'boolean') {\n            opts.byRow = options;\n        } else if (options === 'remove') {\n            opts.remove = true;\n        }\n\n        return opts;\n    };\n\n    /*\n    *  matchHeight\n    *  plugin definition\n    */\n\n    var matchHeight = $.fn.matchHeight = function(options) {\n        var opts = _parseOptions(options);\n\n        // handle remove\n        if (opts.remove) {\n            var that = this;\n\n            // remove fixed height from all selected elements\n            this.css(opts.property, '');\n\n            // remove selected elements from all groups\n            $.each(matchHeight._groups, function(key, group) {\n                group.elements = group.elements.not(that);\n            });\n\n            // TODO: cleanup empty groups\n\n            return this;\n        }\n\n        if (this.length <= 1 && !opts.target) {\n            return this;\n        }\n\n        // keep track of this group so we can re-apply later on load and resize events\n        matchHeight._groups.push({\n            elements: this,\n            options: opts\n        });\n\n        // match each element's height to the tallest element in the selection\n        matchHeight._apply(this, opts);\n\n        return this;\n    };\n\n    /*\n    *  plugin global options\n    */\n\n    matchHeight.version = '0.7.0';\n    matchHeight._groups = [];\n    matchHeight._throttle = 80;\n    matchHeight._maintainScroll = false;\n    matchHeight._beforeUpdate = null;\n    matchHeight._afterUpdate = null;\n    matchHeight._rows = _rows;\n    matchHeight._parse = _parse;\n    matchHeight._parseOptions = _parseOptions;\n\n    /*\n    *  matchHeight._apply\n    *  apply matchHeight to given elements\n    */\n\n    matchHeight._apply = function(elements, options) {\n        var opts = _parseOptions(options),\n            $elements = $(elements),\n            rows = [$elements];\n\n        // take note of scroll position\n        var scrollTop = $(window).scrollTop(),\n            htmlHeight = $('html').outerHeight(true);\n\n        // get hidden parents\n        var $hiddenParents = $elements.parents().filter(':hidden');\n\n        // cache the original inline style\n        $hiddenParents.each(function() {\n            var $that = $(this);\n            $that.data('style-cache', $that.attr('style'));\n        });\n\n        // temporarily must force hidden parents visible\n        $hiddenParents.css('display', 'block');\n\n        // get rows if using byRow, otherwise assume one row\n        if (opts.byRow && !opts.target) {\n\n            // must first force an arbitrary equal height so floating elements break evenly\n            $elements.each(function() {\n                var $that = $(this),\n                    display = $that.css('display');\n\n                // temporarily force a usable display value\n                if (display !== 'inline-block' && display !== 'flex' && display !== 'inline-flex') {\n                    display = 'block';\n                }\n\n                // cache the original inline style\n                $that.data('style-cache', $that.attr('style'));\n\n                $that.css({\n                    'display': display,\n                    'padding-top': '0',\n                    'padding-bottom': '0',\n                    'margin-top': '0',\n                    'margin-bottom': '0',\n                    'border-top-width': '0',\n                    'border-bottom-width': '0',\n                    'height': '100px',\n                    'overflow': 'hidden'\n                });\n            });\n\n            // get the array of rows (based on element top position)\n            rows = _rows($elements);\n\n            // revert original inline styles\n            $elements.each(function() {\n                var $that = $(this);\n                $that.attr('style', $that.data('style-cache') || '');\n            });\n        }\n\n        $.each(rows, function(key, row) {\n            var $row = $(row),\n                targetHeight = 0;\n\n            if (!opts.target) {\n                // skip apply to rows with only one item\n                if (opts.byRow && $row.length <= 1) {\n                    $row.css(opts.property, '');\n                    return;\n                }\n\n                // iterate the row and find the max height\n                $row.each(function(){\n                    var $that = $(this),\n                        style = $that.attr('style'),\n                        display = $that.css('display');\n\n                    // temporarily force a usable display value\n                    if (display !== 'inline-block' && display !== 'flex' && display !== 'inline-flex') {\n                        display = 'block';\n                    }\n\n                    // ensure we get the correct actual height (and not a previously set height value)\n                    var css = { 'display': display };\n                    css[opts.property] = '';\n                    $that.css(css);\n\n                    // find the max height (including padding, but not margin)\n                    if ($that.outerHeight(false) > targetHeight) {\n                        targetHeight = $that.outerHeight(false);\n                    }\n\n                    // revert styles\n                    if (style) {\n                        $that.attr('style', style);\n                    } else {\n                        $that.css('display', '');\n                    }\n                });\n            } else {\n                // if target set, use the height of the target element\n                targetHeight = opts.target.outerHeight(false);\n            }\n\n            // iterate the row and apply the height to all elements\n            $row.each(function(){\n                var $that = $(this),\n                    verticalPadding = 0;\n\n                // don't apply to a target\n                if (opts.target && $that.is(opts.target)) {\n                    return;\n                }\n\n                // handle padding and border correctly (required when not using border-box)\n                if ($that.css('box-sizing') !== 'border-box') {\n                    verticalPadding += _parse($that.css('border-top-width')) + _parse($that.css('border-bottom-width'));\n                    verticalPadding += _parse($that.css('padding-top')) + _parse($that.css('padding-bottom'));\n                }\n\n                // set the height (accounting for padding and border)\n                $that.css(opts.property, (targetHeight - verticalPadding) + 'px');\n            });\n        });\n\n        // revert hidden parents\n        $hiddenParents.each(function() {\n            var $that = $(this);\n            $that.attr('style', $that.data('style-cache') || null);\n        });\n\n        // restore scroll position if enabled\n        if (matchHeight._maintainScroll) {\n            $(window).scrollTop((scrollTop / htmlHeight) * $('html').outerHeight(true));\n        }\n\n        return this;\n    };\n\n    /*\n    *  matchHeight._applyDataApi\n    *  applies matchHeight to all elements with a data-match-height attribute\n    */\n\n    matchHeight._applyDataApi = function() {\n        var groups = {};\n\n        // generate groups by their groupId set by elements using data-match-height\n        $('[data-match-height], [data-mh]').each(function() {\n            var $this = $(this),\n                groupId = $this.attr('data-mh') || $this.attr('data-match-height');\n\n            if (groupId in groups) {\n                groups[groupId] = groups[groupId].add($this);\n            } else {\n                groups[groupId] = $this;\n            }\n        });\n\n        // apply matchHeight to each group\n        $.each(groups, function() {\n            this.matchHeight(true);\n        });\n    };\n\n    /*\n    *  matchHeight._update\n    *  updates matchHeight on all current groups with their correct options\n    */\n\n    var _update = function(event) {\n        if (matchHeight._beforeUpdate) {\n            matchHeight._beforeUpdate(event, matchHeight._groups);\n        }\n\n        $.each(matchHeight._groups, function() {\n            matchHeight._apply(this.elements, this.options);\n        });\n\n        if (matchHeight._afterUpdate) {\n            matchHeight._afterUpdate(event, matchHeight._groups);\n        }\n    };\n\n    matchHeight._update = function(throttle, event) {\n        // prevent update if fired from a resize event\n        // where the viewport width hasn't actually changed\n        // fixes an event looping bug in IE8\n        if (event && event.type === 'resize') {\n            var windowWidth = $(window).width();\n            if (windowWidth === _previousResizeWidth) {\n                return;\n            }\n            _previousResizeWidth = windowWidth;\n        }\n\n        // throttle updates\n        if (!throttle) {\n            _update(event);\n        } else if (_updateTimeout === -1) {\n            _updateTimeout = setTimeout(function() {\n                _update(event);\n                _updateTimeout = -1;\n            }, matchHeight._throttle);\n        }\n    };\n\n    /*\n    *  bind events\n    */\n\n    // apply on DOM ready event\n    $(matchHeight._applyDataApi);\n\n    // update heights on load and resize events\n    $(window).bind('load', function(event) {\n        matchHeight._update(false, event);\n    });\n\n    // throttled update heights on resize events\n    $(window).bind('resize orientationchange', function(event) {\n        matchHeight._update(true, event);\n    });\n\n});\n"]}